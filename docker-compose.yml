services:
  user-service:
    container_name: user-service
    build:
      context: .
      dockerfile: DockerfileUserService
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker

  eureka:
    container_name: eureka-service
    build:
      context: .
      dockerfile: DockerfileEurekaService
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker

  task-service:
    container_name: task-service
    build:
      context: .
      dockerfile: DockerfileTaskService
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - eureka
      - api-gateway-service
      - admin-service
      - kafka
      - database_task

  notification-service:
    container_name: notification-service
    build:
      context: .
      dockerfile: DockerfileNotificationService
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - eureka
      - api-gateway-service
      - admin-service
      - kafka

  audit-service:
    container_name: audit-service
    build:
      context: .
      dockerfile: DockerfileAuditService
    ports:
      - "8086:8086"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - eureka
      - api-gateway-service
      - admin-service
      - elasticsearch
      - kafka

  analytics-service:
    container_name: analytics-service
    build:
      context: .
      dockerfile: DockerfileAnalyticsService
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - eureka
      - api-gateway-service
      - admin-service
      - cache

  admin-service:
    container_name: admin-service
    build:
      context: .
      dockerfile: DockerfileAdminService
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - eureka

  api-gateway-service:
    container_name: api-gateway-service
    build:
      context: .
      dockerfile: DockerfileNotificationService
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - eureka
      - admin-service

  database_task:
    container_name: task_db
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: task_db
    ports:
      - "5432:5432"

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0
    environment:
      KC_HOSTNAME_PORT: 7080
      KC_HOSTNAME_STRICT_BACKCHANNEL: "true"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: "true"
      KC_LOG_LEVEL: info
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:7080/health/ready" ]
      interval: 15s
      timeout: 2s
      retries: 15
    command: [ "start-dev", "--http-port", "7080", "--https-port", "7443" ]
    ports:
      - "7080:7080"
      - "7443:7443"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  cache:
    image: "redis"
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL

  elasticsearch:
    image: elasticsearch:8.10.2
    logging:
      driver: "json-file"
      options:
        max-size: "1000m"
        max-file: "10"
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - node.name=elasticsearch-node
      - discovery.seed_hosts=elasticsearch-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms4096m -Xmx4096m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9200:9200"
      - "9600:9600"